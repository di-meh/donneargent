/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'
import type { JSX } from 'react'
import { RigidBody, type RigidBodyProps } from '@react-three/rapier'

type GLTFResult = GLTF & {
  nodes: {
    Puits: THREE.Mesh
    Terre: THREE.Mesh
  }
  materials: {
    Puits: THREE.MeshStandardMaterial
    Herbe: THREE.MeshStandardMaterial
  }
}

export function Puits(props: RigidBodyProps) {
  const { nodes, materials } = useGLTF('/models/scene.glb') as unknown as GLTFResult
  return (
    <RigidBody type="fixed" colliders="trimesh" name="floor" {...props}>
        <group dispose={null}>
        <mesh
            name="Puits"
            castShadow
            receiveShadow
            geometry={nodes.Puits.geometry}
            material={materials.Puits}
        />
        <mesh
            name="Terre"
            castShadow
            receiveShadow
            geometry={nodes.Terre.geometry}
            material={materials.Herbe}
        />
        </group>
    </RigidBody>
    
  )
}

useGLTF.preload('/models/scene.glb')
