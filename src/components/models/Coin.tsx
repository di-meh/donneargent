/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { type JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'
import { RigidBody } from '@react-three/rapier'

type GLTFResult = GLTF & {
  nodes: {
    cylinder: THREE.Mesh
  }
  materials: {}
}

export function Coin(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/coin.glb') as unknown as GLTFResult
  return (
    <RigidBody type="dynamic" colliders="hull" name="coin">
        <group {...props} dispose={null}>
        <mesh
            castShadow
            receiveShadow
            geometry={nodes.cylinder.geometry}
            material={nodes.cylinder.material}
        />
        </group>
    </RigidBody>
  )
}

useGLTF.preload('/models/coin.glb')

